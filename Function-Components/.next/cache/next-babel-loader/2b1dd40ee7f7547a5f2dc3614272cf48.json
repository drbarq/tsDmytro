{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lost-Found/Udemy/TS Dmytro/Function-Components/component/TasksList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTasks } from '../actions';\nexport class TasksList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", () => {\n      const {\n        fetchTasks\n      } = this.props;\n      fetchTasks();\n    });\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.props;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, tasks.map((task, i) => {\n      return __jsx(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, task.title);\n    })), __jsx(\"button\", {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Fetch Tasks\"));\n  }\n\n}\nexport const ConnectedTasksList = connect(state => ({\n  tasks: state.tasks\n}), dispatch => ({\n  fetchTasks: () => dispatch(fetchTasks())\n}))(TasksList); // export class TasksList extends React.Component<Props> {\n//   render() {\n//     const { tasks} = this.props\n//     <ul>\n//       {tasks.map((task, i) => {\n//       return <li key={i}>{task.title}</li>\n//     })}\n//     </ul>\n//   }\n// }","map":{"version":3,"sources":["/Volumes/Lost-Found/Udemy/TS Dmytro/Function-Components/component/TasksList.tsx"],"names":["React","connect","fetchTasks","TasksList","Component","props","render","tasks","map","task","i","title","onClick","ConnectedTasksList","state","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAcA,OAAO,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAkD;AAAA;AAAA;;AAAA,qCAC7C,MAAM;AACd,YAAM;AAAEF,QAAAA;AAAF,UAAiB,KAAKG,KAA5B;AACAH,MAAAA,UAAU;AACX,KAJsD;AAAA;;AAMvDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,IAAI,CAACE,KAAlB,CAAP;AACD,KAFA,CADH,CADF,EAME;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;AAUD;;AAlBsD;AAqBzD,OAAO,MAAMC,kBAAkB,GAAGZ,OAAO,CAMvCa,KAAK,KAAK;AACRP,EAAAA,KAAK,EAAEO,KAAK,CAACP;AADL,CAAL,CANkC,EASvCQ,QAAQ,KAAK;AACXb,EAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACb,UAAU,EAAX;AADf,CAAL,CAT+B,CAAP,CAYhCC,SAZgC,CAA3B,C,CAaP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Task } from '../types';\nimport { connect } from 'react-redux';\nimport { AppState } from '../reducer';\nimport { fetchTasks } from '../actions';\n\ninterface StateProps {\n  tasks: Task[];\n}\n\ninterface DispatchProps {\n  fetchTasks: () => void;\n}\n\ninterface OwnProps {}\n\ninterface AllProps extends StateProps, DispatchProps, OwnProps {}\n\nexport class TasksList extends React.Component<AllProps> {\n  onClick = () => {\n    const { fetchTasks } = this.props;\n    fetchTasks();\n  };\n\n  render() {\n    const { tasks } = this.props;\n    return (\n      <div>\n        <ul>\n          {tasks.map((task, i) => {\n            return <li key={i}>{task.title}</li>;\n          })}\n        </ul>\n        <button onClick={this.onClick}>Fetch Tasks</button>\n      </div>\n    );\n  }\n}\n\nexport const ConnectedTasksList = connect<\n  StateProps,\n  DispatchProps,\n  OwnProps,\n  AppState\n>(\n  state => ({\n    tasks: state.tasks\n  }),\n  dispatch => ({\n    fetchTasks: () => dispatch(fetchTasks())\n  })\n)(TasksList);\n// export class TasksList extends React.Component<Props> {\n//   render() {\n//     const { tasks} = this.props\n\n//     <ul>\n//       {tasks.map((task, i) => {\n//       return <li key={i}>{task.title}</li>\n//     })}\n//     </ul>\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}