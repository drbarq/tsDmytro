{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Lost-Found/Udemy/TS Dmytro/Function-Components/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar TasksList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TasksList, _React$Component);\n\n  function TasksList(props) {\n    var _this;\n\n    _classCallCheck(this, TasksList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TasksList).call(this, props));\n    _this.state = {\n      tasks: props.initialTasks\n    };\n    _this.onAddNewTaskClick = _this.onAddNewTaskClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TasksList, [{\n    key: \"onAddNewTaskClick\",\n    value: function onAddNewTaskClick() {\n      this.setState({\n        tasks: [].concat(_toConsumableArray(this.state.tasks), [{\n          title: 'New task title'\n        }])\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tasks = this.state.tasks;\n      return __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, tasks.map(function (task, i) {\n        return __jsx(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, task.title);\n      }), __jsx(\"button\", {\n        onClick: this.onAddNewTaskClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Add New Task\"));\n    }\n  }]);\n\n  return TasksList;\n}(React.Component);\n\nvar tasks = [{\n  title: 'Task one'\n}, {\n  title: 'task two'\n}];\nexport default (function () {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(TasksList, {\n    initialTasks: tasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}); // interface Task {\n//   title: string;\n// }\n// interface TaskListProps {\n//   tasks: Task[];\n// }\n// const TaskList: React.FunctionComponent<TaskListProps> = ({ tasks }) => {\n//   return (\n//     <ul>\n//       {tasks.map((task, i) => {\n//         return <li key={i}>{task.title}</li>;\n//       })}\n//     </ul>\n//   );\n// };\n// const tasks = [{ title: 'Task One' }, { title: 'Task Two' }];\n// export default () => (\n//   <div>\n//     <TaskList tasks={tasks} />\n//   </div>\n// );","map":{"version":3,"sources":["/Volumes/Lost-Found/Udemy/TS Dmytro/Function-Components/pages/index.tsx"],"names":["React","TasksList","props","state","tasks","initialTasks","onAddNewTaskClick","bind","setState","title","map","task","i","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAcMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmC;AAAA;;AAAA;;AACjC,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEF,KAAK,CAACG;AADF,KAAb;AAGA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AALiC;AAMlC;;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,KAAK,+BAAM,KAAKD,KAAL,CAAWC,KAAjB,IAAwB;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAAxB;AADO,OAAd;AAGD;;;6BAEQ;AAAA,UACCL,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,IAAI,CAACF,KAAlB,CAAP;AACD,OAFA,CADH,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKH,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADF;AAQD;;;;EAzBqBN,KAAK,CAACa,S;;AA4B9B,IAAMT,KAAK,GAAG,CAAC;AAAEK,EAAAA,KAAK,EAAE;AAAT,CAAD,EAAwB;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAAxB,CAAd;AAEA,gBAAe;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,YAAY,EAAEL,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADa;AAAA,CAAf,E,CAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\ninterface Task {\n  title: string;\n}\n\ninterface TasksListProps {\n  initialTasks: Task[];\n}\n\ninterface TasksListState {\n  tasks: Task[];\n}\n\nclass TasksList extends React.Component<TasksListProps, TasksListState> {\n  constructor(props: TasksListProps) {\n    super(props);\n    this.state = {\n      tasks: props.initialTasks\n    };\n    this.onAddNewTaskClick = this.onAddNewTaskClick.bind(this);\n  }\n\n  onAddNewTaskClick() {\n    this.setState({\n      tasks: [...this.state.tasks, { title: 'New task title' }]\n    });\n  }\n\n  render() {\n    const { tasks } = this.state;\n    return (\n      <ul>\n        {tasks.map((task, i) => {\n          return <li key={i}>{task.title}</li>;\n        })}\n        <button onClick={this.onAddNewTaskClick}>Add New Task</button>\n      </ul>\n    );\n  }\n}\n\nconst tasks = [{ title: 'Task one' }, { title: 'task two' }];\n\nexport default () => (\n  <div>\n    <TasksList initialTasks={tasks} />\n  </div>\n);\n\n// interface Task {\n//   title: string;\n// }\n\n// interface TaskListProps {\n//   tasks: Task[];\n// }\n\n// const TaskList: React.FunctionComponent<TaskListProps> = ({ tasks }) => {\n//   return (\n//     <ul>\n//       {tasks.map((task, i) => {\n//         return <li key={i}>{task.title}</li>;\n//       })}\n//     </ul>\n//   );\n// };\n\n// const tasks = [{ title: 'Task One' }, { title: 'Task Two' }];\n\n// export default () => (\n//   <div>\n//     <TaskList tasks={tasks} />\n//   </div>\n// );\n"]},"metadata":{},"sourceType":"module"}