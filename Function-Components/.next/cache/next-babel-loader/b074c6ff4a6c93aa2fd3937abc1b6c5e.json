{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Volumes/Lost-Found/Udemy/TS Dmytro/Function-Components/component/TasksList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTasks as _fetchTasks } from '../actions';\nexport var TasksList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TasksList, _React$Component);\n\n  function TasksList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TasksList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TasksList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      var fetchTasks = _this.props.fetchTasks;\n      fetchTasks();\n    });\n\n    return _this;\n  }\n\n  _createClass(TasksList, [{\n    key: \"render\",\n    value: function render() {\n      var tasks = this.props.tasks;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, tasks.map(function (task, i) {\n        return __jsx(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, task.title);\n      })), __jsx(\"button\", {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Fetch Tasks\"));\n    }\n  }]);\n\n  return TasksList;\n}(React.Component);\nexport var ConnectedTasksList = connect(function (state) {\n  return {\n    tasks: state.tasks\n  };\n}, function (dispatch) {\n  return {\n    fetchTasks: function fetchTasks() {\n      return dispatch(_fetchTasks());\n    }\n  };\n})(TasksList); // export class TasksList extends React.Component<Props> {\n//   render() {\n//     const { tasks} = this.props\n//     <ul>\n//       {tasks.map((task, i) => {\n//       return <li key={i}>{task.title}</li>\n//     })}\n//     </ul>\n//   }\n// }","map":{"version":3,"sources":["/Volumes/Lost-Found/Udemy/TS Dmytro/Function-Components/component/TasksList.tsx"],"names":["React","connect","fetchTasks","TasksList","props","tasks","map","task","i","title","onClick","Component","ConnectedTasksList","state","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAU,IAAVA,WAAT,QAA2B,YAA3B;AAcA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,8DACY,YAAM;AAAA,UACND,UADM,GACS,MAAKE,KADd,CACNF,UADM;AAEdA,MAAAA,UAAU;AACX,KAJH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAMW;AAAA,UACCG,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,IAAI,CAACE,KAAlB,CAAP;AACD,OAFA,CADH,CADF,EAME;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CADF;AAUD;AAlBH;;AAAA;AAAA,EAA+BV,KAAK,CAACW,SAArC;AAqBA,OAAO,IAAMC,kBAAkB,GAAGX,OAAO,CAMvC,UAAAY,KAAK;AAAA,SAAK;AACRR,IAAAA,KAAK,EAAEQ,KAAK,CAACR;AADL,GAAL;AAAA,CANkC,EASvC,UAAAS,QAAQ;AAAA,SAAK;AACXZ,IAAAA,UAAU,EAAE;AAAA,aAAMY,QAAQ,CAACZ,WAAU,EAAX,CAAd;AAAA;AADD,GAAL;AAAA,CAT+B,CAAP,CAYhCC,SAZgC,CAA3B,C,CAaP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Task } from '../types';\nimport { connect } from 'react-redux';\nimport { AppState } from '../reducer';\nimport { fetchTasks } from '../actions';\n\ninterface StateProps {\n  tasks: Task[];\n}\n\ninterface DispatchProps {\n  fetchTasks: () => void;\n}\n\ninterface OwnProps {}\n\ninterface AllProps extends StateProps, DispatchProps, OwnProps {}\n\nexport class TasksList extends React.Component<AllProps> {\n  onClick = () => {\n    const { fetchTasks } = this.props;\n    fetchTasks();\n  };\n\n  render() {\n    const { tasks } = this.props;\n    return (\n      <div>\n        <ul>\n          {tasks.map((task, i) => {\n            return <li key={i}>{task.title}</li>;\n          })}\n        </ul>\n        <button onClick={this.onClick}>Fetch Tasks</button>\n      </div>\n    );\n  }\n}\n\nexport const ConnectedTasksList = connect<\n  StateProps,\n  DispatchProps,\n  OwnProps,\n  AppState\n>(\n  state => ({\n    tasks: state.tasks\n  }),\n  dispatch => ({\n    fetchTasks: () => dispatch(fetchTasks())\n  })\n)(TasksList);\n// export class TasksList extends React.Component<Props> {\n//   render() {\n//     const { tasks} = this.props\n\n//     <ul>\n//       {tasks.map((task, i) => {\n//       return <li key={i}>{task.title}</li>\n//     })}\n//     </ul>\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}